//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Executor;
import java.io.*;
import java.util.*;

public class CandidateProfileController {
    private static List<CandidateProfile> profiles = new ArrayList();

    public CandidateProfileController() {
    }

    public static void main(String[] args) throws Exception {
        readProfilesFromFile("candidates.txt");
        HttpServer server = HttpServer.create(new InetSocketAddress(8080), 0);
        server.createContext("/submitProfile", new SubmitProfileHandler());
        server.setExecutor((Executor)null);
        server.start();
    }

    public static List<CandidateProfile> readProfilesFromFile(String filePath) throws IOException {
        List<CandidateProfile> profiles = new ArrayList<>();
        File file = new File(filePath);
        if (!file.exists()) {
            file.createNewFile();
        }

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                // Parse each line of the file into a CandidateProfile object
                CandidateProfile profile = parseProfile(line);
                profiles.add(profile);
            }
        }

        return profiles;
    }

    public static CandidateProfile parseProfile(String line) throws FileNotFoundException {
        String[] profileData = line.split(",");

        // Assuming the order of fields in the file is: name, age, education, skills
        String name = profileData[0].trim();
        String bio = profileData[1].trim();
        String slogan = profileData[2].trim();
        String picturePath = profileData[3].trim();
        File pictureFile = new File(picturePath);
        InputStream picture = new FileInputStream(pictureFile);

        return new CandidateProfile(name, bio, slogan, picture);
    }



    static class SubmitProfileHandler implements HttpHandler {
        SubmitProfileHandler() {
        }

        public void handle(HttpExchange exchange) throws IOException {
            if ("POST".equals(exchange.getRequestMethod())) {
                Map<String, String> parameters = new HashMap();
                InputStream requestBody = exchange.getRequestBody();
                StringBuilder sb = new StringBuilder();

                int i;
                while((i = requestBody.read()) != -1) {
                    sb.append((char)i);
                }

                String[] parts = sb.toString().split("&");
                String[] var7 = parts;
                int var8 = parts.length;

                for(int var9 = 0; var9 < var8; ++var9) {
                    String part = var7[var9];
                    String[] keyValue = part.split("=");
                    if (keyValue.length > 1) {
                        parameters.put(keyValue[0], keyValue[1]);
                    }
                }

                String name = (String)parameters.get("name");
                String bio = (String)parameters.get("bio");
                String slogan = (String)parameters.get("slogan");
                InputStream picture = exchange.getRequestBody();
                CandidateProfile profile = new CandidateProfile(name, bio, slogan, picture);
                CandidateProfileController.profiles.add(profile);
                String response = "success.html";
                exchange.sendResponseHeaders(302, (long)response.getBytes().length);
                OutputStream os = exchange.getResponseBody();
                os.write(response.getBytes());
                os.close();
            } else {
                exchange.sendResponseHeaders(405, -1L);
            }

        }
    }

    static class CandidateProfile {
        private String name;
        private String bio;
        private String slogan;
        private InputStream picture;

        public CandidateProfile(String name, String bio, String slogan, InputStream picture) {
            this.name = name;
            this.bio = bio;
            this.slogan = slogan;
            this.picture = picture;
        }

        public String getName() {
            return this.name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getBio() {
            return this.bio;
        }

        public void setBio(String bio) {
            this.bio = bio;
        }

        public String getSlogan() {
            return this.slogan;
        }

        public void setSlogan(String slogan) {
            this.slogan = slogan;
        }

        public InputStream getPicture() {
            return this.picture;
        }

        public void setPicture(InputStream picture) {
            this.picture = picture;
        }
    }
}

